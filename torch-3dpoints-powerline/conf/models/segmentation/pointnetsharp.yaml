models:
    SixSameK20RelGAtt:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [196, 196, 196, 196, 196, 196]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "relative"
        agg: "max"
        global_att: True

    SixSameK20AbsGAtt:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [196, 196, 196, 196, 196, 196]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "absolute"
        agg: "max"
        global_att: True

    SixSameK20Abs:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [196, 196, 196, 196, 196, 196]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "absolute"
        agg: "max"

    ThreeSameK20Abs:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [256, 256, 256]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "absolute"
        agg: "max"


    SixSameK20Rel:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [196, 196, 196, 196, 196, 196]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "relative"
        agg: "max"


    ThreeSameK20Rel:
        class: pointnetsharp.PointNetSharp
        conv_type: "PARTIAL_DENSE"
        info_channel: FEAT
        local_nn: [256, 256, 256]
        out_nn: [512, N_CLS]
        k: 20
        neighbor_pos: "relative"
        agg: "max"

    USharpNetAbsAvg:
        class: kpconv.KPConvPaper
        conv_type: "PARTIAL_DENSE"
        use_category: ${data.use_category}
        define_constants:
            in_grid_size: ${data.first_subsampling}
            in_feat: 64
            bn_momentum: 0.02
        down_conv:
            n_kernel_points: 15
            sharp_conv: True
            sharp_conv_agg: "avg"
            sharp_neighbor_pos: "absolute"
            down_conv_nn:
              [
                  [ [ FEAT + 1, in_feat ], [ in_feat, 2*in_feat ] ],
                  [ [ 2*in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ],
                  [ [ 4*in_feat, 4*in_feat ], [ 4*in_feat, 8*in_feat ] ],
                  [ [ 8*in_feat, 8*in_feat ], [ 8*in_feat, 16*in_feat ] ],
                  [ [ 16*in_feat, 16*in_feat ], [ 16*in_feat, 32*in_feat ] ],
              ]
            grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ 2*in_grid_size, 2*in_grid_size ],
                  [ 4*in_grid_size, 4*in_grid_size ],
                  [ 8*in_grid_size, 8*in_grid_size ],
                  [ 16*in_grid_size, 16*in_grid_size ],
              ]
            prev_grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ in_grid_size, 2*in_grid_size ],
                  [ 2*in_grid_size, 4*in_grid_size ],
                  [ 4*in_grid_size, 8*in_grid_size ],
                  [ 8*in_grid_size, 16*in_grid_size ],
              ]
            block_names:
              [
                  [ "SimpleBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
              ]
            has_bottleneck:
              [ [ False, True ], [ True, True ], [ True, True ], [ True, True ], [ True, True ] ]
            deformable:
              [
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
              ]
            max_num_neighbors: [ [ 25, 25 ], [ 25, 30 ], [ 30, 38 ], [ 38, 38 ], [ 38, 38 ] ]
            module_name: KPDualBlock
        up_conv:
            module_name: FPModule_PD
            up_conv_nn:
              [
                  [ 32*in_feat + 16*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, in_feat ],
              ]
            skip: True
            up_k: [ 1, 1, 1, 1 ]
            bn_momentum:
              [ bn_momentum, bn_momentum, bn_momentum, bn_momentum, bn_momentum ]
        mlp_cls:
            nn: [ in_feat, in_feat ]
            dropout: 0
            bn_momentum: bn_momentum
        loss_weights:
            lambda_reg: 0

    USharpNetAbsMax:
        class: kpconv.KPConvPaper
        conv_type: "PARTIAL_DENSE"
        use_category: ${data.use_category}
        define_constants:
            in_grid_size: ${data.first_subsampling}
            in_feat: 64
            bn_momentum: 0.02
        down_conv:
            n_kernel_points: 15
            sharp_conv: True
            sharp_conv_agg: "max"
            sharp_neighbor_pos: "absolute"
            down_conv_nn:
              [
                  [ [ FEAT + 1, in_feat ], [ in_feat, 2*in_feat ] ],
                  [ [ 2*in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ],
                  [ [ 4*in_feat, 4*in_feat ], [ 4*in_feat, 8*in_feat ] ],
                  [ [ 8*in_feat, 8*in_feat ], [ 8*in_feat, 16*in_feat ] ],
                  [ [ 16*in_feat, 16*in_feat ], [ 16*in_feat, 32*in_feat ] ],
              ]
            grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ 2*in_grid_size, 2*in_grid_size ],
                  [ 4*in_grid_size, 4*in_grid_size ],
                  [ 8*in_grid_size, 8*in_grid_size ],
                  [ 16*in_grid_size, 16*in_grid_size ],
              ]
            prev_grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ in_grid_size, 2*in_grid_size ],
                  [ 2*in_grid_size, 4*in_grid_size ],
                  [ 4*in_grid_size, 8*in_grid_size ],
                  [ 8*in_grid_size, 16*in_grid_size ],
              ]
            block_names:
              [
                  [ "SimpleBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
              ]
            has_bottleneck:
              [ [ False, True ], [ True, True ], [ True, True ], [ True, True ], [ True, True ] ]
            deformable:
              [
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
              ]
            max_num_neighbors: [ [ 25, 25 ], [ 25, 30 ], [ 30, 38 ], [ 38, 38 ], [ 38, 38 ] ]
            module_name: KPDualBlock
        up_conv:
            module_name: FPModule_PD
            up_conv_nn:
              [
                  [ 32*in_feat + 16*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, in_feat ],
              ]
            skip: True
            up_k: [ 1, 1, 1, 1 ]
            bn_momentum:
              [ bn_momentum, bn_momentum, bn_momentum, bn_momentum, bn_momentum ]
        mlp_cls:
            nn: [ in_feat, in_feat ]
            dropout: 0
            bn_momentum: bn_momentum
        loss_weights:
            lambda_reg: 0


    USharpNetRelAvg:
        class: kpconv.KPConvPaper
        conv_type: "PARTIAL_DENSE"
        use_category: ${data.use_category}
        define_constants:
            in_grid_size: ${data.first_subsampling}
            in_feat: 64
            bn_momentum: 0.02
        down_conv:
            n_kernel_points: 15
            sharp_conv: True
            sharp_conv_agg: "avg"
            sharp_neighbor_pos: "relative"
            down_conv_nn:
              [
                  [ [ FEAT + 1, in_feat ], [ in_feat, 2*in_feat ] ],
                  [ [ 2*in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ],
                  [ [ 4*in_feat, 4*in_feat ], [ 4*in_feat, 8*in_feat ] ],
                  [ [ 8*in_feat, 8*in_feat ], [ 8*in_feat, 16*in_feat ] ],
                  [ [ 16*in_feat, 16*in_feat ], [ 16*in_feat, 32*in_feat ] ],
              ]
            grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ 2*in_grid_size, 2*in_grid_size ],
                  [ 4*in_grid_size, 4*in_grid_size ],
                  [ 8*in_grid_size, 8*in_grid_size ],
                  [ 16*in_grid_size, 16*in_grid_size ],
              ]
            prev_grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ in_grid_size, 2*in_grid_size ],
                  [ 2*in_grid_size, 4*in_grid_size ],
                  [ 4*in_grid_size, 8*in_grid_size ],
                  [ 8*in_grid_size, 16*in_grid_size ],
              ]
            block_names:
              [
                  [ "SimpleBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
              ]
            has_bottleneck:
              [ [ False, True ], [ True, True ], [ True, True ], [ True, True ], [ True, True ] ]
            deformable:
              [
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
              ]
            max_num_neighbors: [ [ 25, 25 ], [ 25, 30 ], [ 30, 38 ], [ 38, 38 ], [ 38, 38 ] ]
            module_name: KPDualBlock
        up_conv:
            module_name: FPModule_PD
            up_conv_nn:
              [
                  [ 32*in_feat + 16*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, in_feat ],
              ]
            skip: True
            up_k: [ 1, 1, 1, 1 ]
            bn_momentum:
              [ bn_momentum, bn_momentum, bn_momentum, bn_momentum, bn_momentum ]
        mlp_cls:
            nn: [ in_feat, in_feat ]
            dropout: 0
            bn_momentum: bn_momentum
        loss_weights:
            lambda_reg: 0

    USharpNetRelMax:
        class: kpconv.KPConvPaper
        conv_type: "PARTIAL_DENSE"
        use_category: ${data.use_category}
        define_constants:
            in_grid_size: ${data.first_subsampling}
            in_feat: 64
            bn_momentum: 0.02
        down_conv:
            n_kernel_points: 15
            sharp_conv: True
            sharp_conv_agg: "max"
            sharp_neighbor_pos: "relative"
            down_conv_nn:
              [
                  [ [ FEAT + 1, in_feat ], [ in_feat, 2*in_feat ] ],
                  [ [ 2*in_feat, 2*in_feat ], [ 2*in_feat, 4*in_feat ] ],
                  [ [ 4*in_feat, 4*in_feat ], [ 4*in_feat, 8*in_feat ] ],
                  [ [ 8*in_feat, 8*in_feat ], [ 8*in_feat, 16*in_feat ] ],
                  [ [ 16*in_feat, 16*in_feat ], [ 16*in_feat, 32*in_feat ] ],
              ]
            grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ 2*in_grid_size, 2*in_grid_size ],
                  [ 4*in_grid_size, 4*in_grid_size ],
                  [ 8*in_grid_size, 8*in_grid_size ],
                  [ 16*in_grid_size, 16*in_grid_size ],
              ]
            prev_grid_size:
              [
                  [ in_grid_size, in_grid_size ],
                  [ in_grid_size, 2*in_grid_size ],
                  [ 2*in_grid_size, 4*in_grid_size ],
                  [ 4*in_grid_size, 8*in_grid_size ],
                  [ 8*in_grid_size, 16*in_grid_size ],
              ]
            block_names:
              [
                  [ "SimpleBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
                  [ "ResnetBBlock", "ResnetBBlock" ],
              ]
            has_bottleneck:
              [ [ False, True ], [ True, True ], [ True, True ], [ True, True ], [ True, True ] ]
            deformable:
              [
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
                  [ False, False ],
              ]
            max_num_neighbors: [ [ 25, 25 ], [ 25, 30 ], [ 30, 38 ], [ 38, 38 ], [ 38, 38 ] ]
            module_name: KPDualBlock
        up_conv:
            module_name: FPModule_PD
            up_conv_nn:
              [
                  [ 32*in_feat + 16*in_feat, 8*in_feat ],
                  [ 8*in_feat + 8*in_feat, 4*in_feat ],
                  [ 4*in_feat + 4*in_feat, 2*in_feat ],
                  [ 2*in_feat + 2*in_feat, in_feat ],
              ]
            skip: True
            up_k: [ 1, 1, 1, 1 ]
            bn_momentum:
              [ bn_momentum, bn_momentum, bn_momentum, bn_momentum, bn_momentum ]
        mlp_cls:
            nn: [ in_feat, in_feat ]
            dropout: 0
            bn_momentum: bn_momentum
        loss_weights:
            lambda_reg: 0